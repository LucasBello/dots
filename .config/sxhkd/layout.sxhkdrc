##################
# LAYOUT CONTROL #
##################

# alternate between the tiled and monocle layout
shift + f 
	bspc desktop -l next

# swap the current node and the biggest window
Return
	bspc-main-toggle

# bar toggle
shift + b
    togglebarbspwm

################
# NODE CONTROL #
################

# set node state
{t,shift + t,space,f}
	bspc node -t \~{tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
shift + {m,l,s,p}
	bspc node -g {marked,locked,sticky,private}

##############
# AESTHETICS #
##############

# Increase or decrease the window gaps
{comma,period}
	gaps=$((`bspc config -d focused window_gap` {+,-} 2)); \
	gaps=$(( gaps > 0 ? gaps : 0 )); \
    bspc config -d focused window_gap $gaps

# Reset gaps to default
control + {comma,period}
	bspc config window_gap $(xrdbvar bspwm.gaps)

# Increase or decrease padding
shift + {comma,period}
	bspc-padding {+,-}2

# Reset padding to defaults
shift + ctrl + {comma,period}
	bspc-padding reset

########################
# WORKSPACE MANAGEMENT #
########################

# focus the next/previous window in the current desktop
{_, shift +} {j,k}
	bspc node -{f,s} {next,prev}.local.!hidden.window

# focus the next/previous desktop or send a node to the next/previous desktop
{_, shift +} {h,l}
	bspc {desktop -f, node -d} {prev,next}.local

# send a node to the next/previous desktop and follow
m ; {h,l}
	bspc node -d {prev,next} --follow

# focus the last node/desktop
shift + Tab
	bspc desktop -f last

# focus or send to the given desktop
{_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# send node to workspace and follow
m ; {1-9}
	bspc node -d '^{1-9,10}' --follow

# focus first unoccupied workspace
n
    bspc desktop -f 'next.!occupied'

# send node to first empty workspace
shift + n
    bspc node -d 'next.!occupied'

# send node to first empty workspace and follow
m ; n
    bspc node -d 'next.!occupied' --follow

# swap focused workspace with another workspace
shift + s ; {1-9,0} ; {1-9,0} 
	bspc-desktop-swap {1-9,10} {1-9,10} 

# focus the node for the given path jump
#alt + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# Balance parent node
b ; m
	bspc node @parent -B

# Balance all windows in vertical or horizontal direction
b ; {h,j,k,l}
	bspc-balance {west, south, north, east}

################
# PRESELECTION #
################

# preselect the direction
p ; {h,j,k,l}
	bspc-presel {west,south,north,east} 0.1

# cancel the preselection for all nodes on the desktop
ctrl + p
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

p ; p
    $TERMINAL

# Move current window to pre-selected space
shift + space
	bspc node -t tiled & \
    bspc node -n last.!automatic

#################
# FLOAT CONTROL #
#################

control + shift + {h,j,k,l}
    bspc-resize {x -, y -, y +, x +} 20

r : {h,j,k,l}
    bspc-resize {x -, y -, y +, x +} 20

#alt + r : {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

#alt + r: shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
control + {h,j,k,l}
	PADDING=$(xrdbvar bspwm.outergaps); \
	AMOUNT=20; \
	window-ctrl $PADDING move {-$AMOUNT +0, +0 +$AMOUNT, +0 -$AMOUNT, +$AMOUNT +0}

shift + d : {h,j,k,l}
	PADDING=$(xrdbvar bspwm.outergaps); \
	window-ctrl $PADDING {multwidth 0.5, multheight 0.5, multheight 2.0, multwidth 2.0} center

# teleport windows
{q,w,e,a,s,d,z,x,c}
	PADDING=$(xrdbvar bspwm.outergaps); \
	window-ctrl $PADDING {topleft,top,topright,left,center,right,bottomleft,bottom,botomright} 

########
# MODE #
########
alt + Escape
    . $XDG_CONFIG_HOME/sxhkd/normal.mode
