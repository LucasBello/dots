#!/bin/bash

# Method for limiting an integer value to a specific range
limit() {
    if (( $1 < $2 )); then
        v="$2"
    elif (( $1 > $3 )); then
        v="$3"
    else
        v="$1"
    fi
    echo "$v"
}

# Get screen padding (assume equal padding all around the screen)
padding=$1

# Get window position and dimensions
unset x y w h
eval $(xwininfo -id $(xdotool getactivewindow) |
sed -n -e "s/^ \+Absolute upper-left X: \+\([0-9]\+\).*/x=\1/p" \
        -e "s/^ \+Absolute upper-left Y: \+\([0-9]\+\).*/y=\1/p" \
        -e "s/^ \+Width: \+\([0-9]\+\).*/w=\1/p" \
        -e "s/^ \+Height: \+\([0-9]\+\).*/h=\1/p" )

# Get screen dimensions
sw=$(xwininfo -root|sed '/Width/!d;s/.* //')
sh=$(xwininfo -root|sed '/Height/!d;s/.* //')

# Calculate maximum width and height
maxw=$(($sw - $padding*2))
maxh=$(($sh - $padding*2))

# Function for moving a window
move() {
    x=$(limit $1 $padding $maxw)
    y=$(limit $2 $padding $maxh)

    xdotool getactivewindow windowmove "$x" "$y"
}

# Function for resizing a window
resize() {
    xdotool getactivewindow windowsize "$1" "$2"
}


# Perform action
case $2 in
    center)   
        nx=$(( $sw/2 - $w/2 ))
        ny=$(( $sh/2 - $h/2 ))
        move "$nx" "$ny"
    ;;
    left)
        nx=$padding
        ny=$y
        move "$nx" "$ny"
    ;;
    right)
        nx=$(( $sw - $w - $padding ))
        ny=$y
        move "$nx" "$ny"
    ;;
    top)
        nx=$x
        ny=$padding
        move "$nx" "$ny"
    ;;
    bottom)
        nx=$x
        ny=$(( $sh - $h - $padding ))
        move "$nx" "$ny"
    ;;
    topleft)
        nx=$padding
        ny=$padding
        move "$nx" "$ny"
    ;;
    topright)
        nx=$(( $sw - $w - $padding ))
        ny=$padding
        move "$nx" "$ny"
    ;;
    bottomleft)
        nx=$padding
        ny=$(( $sh - $h - $padding ))
        move "$nx" "$ny"
    ;;
    bottomright)
        nx=$(( $sw - $w - $padding ))
        ny=$(( $sh - $h - $padding ))
        move "$nx" "$ny"
    ;;
    multwidth)
        desiredw=$(printf "%.0f" $(echo "$w * $3" | bc))

        nw=$(limit $desiredw $padding $maxw)
        nh=$h

        resize "$nw" "$nh"
        if [ "$4" == "center" ]; then
            nx=$(echo "$x - ($w * $3 - $w) / 2" | bc)
            ny=$y

            move "$nx" "$ny"
        fi

    ;;
    multheight)
        desiredh=$(printf "%.0f" $(echo "$h * $3" | bc))

        nw=$w
        nh=$(limit $desiredh $padding $maxh)

        resize "$nw" "$nh"
        if [ "$4" == "center" ]; then
            nx=$x
            ny=$(echo "$y - ($h * $3 - $h) / 2" | bc)

            move "$nx" "$ny"
        fi
    ;;
    *)
        echo "$1 is not an option."
    ;;
esac
